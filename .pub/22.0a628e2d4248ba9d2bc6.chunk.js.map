{"version":3,"sources":["webpack:///./src/lib/pluralPolyfill.ts"],"names":["numberPluralizationForm","lc","n","Intl","PluralRules","code","this","select","bind","i","length","charCodeAt","languageCodehash"],"mappings":"uFAAA,OAaA,SAASA,EAAwBC,EAAYC,GACzC,OAAQD,GAGJ,KAAK,MACD,GAAMC,EAAI,IAAO,IAASA,EAAI,IAAO,IAAOA,EAAI,IAAO,IACnD,MAZwC,MAa5C,GAAOA,EAAI,IAAO,GAAMA,EAAI,IAAO,IAAUA,EAAI,IAAO,IAAOA,EAAI,IAAO,IACtE,MAZwC,MAa5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MArByC,OAsB7C,GAAMA,EAAI,IAAO,GAAQA,EAAI,KAAQ,GACjC,MAtBwC,MAuB5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MA3BwC,MA4B5C,GAAS,GAALA,EACA,MA5BwC,MA6B5C,GAAS,GAALA,EACA,MAjCyC,OAkC7C,GAAS,GAALA,EACA,MAlCwC,MAmC5C,GAAS,GAALA,EACA,MAjCyC,OAkC7C,MAGJ,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACD,GAAMA,EAAI,IAAO,GAAQA,EAAI,KAAQ,GACjC,MAhDwC,MAiD5C,GAAOA,EAAI,IAAO,GAAMA,EAAI,IAAO,IAAUA,EAAI,IAAO,IAAOA,EAAI,IAAO,IACtE,MAhDwC,MAiD5C,GAAMA,EAAI,IAAO,GAASA,EAAI,IAAO,GAAMA,EAAI,IAAO,GAAUA,EAAI,KAAQ,IAAOA,EAAI,KAAQ,GAC3F,MAjDyC,OAkD7C,MAGJ,KAAK,QACD,GAAS,GAALA,EACA,MA3DyC,OA4D7C,GAAS,GAALA,EACA,MA5DwC,MA6D5C,MAGJ,KAAK,QACD,GAAKA,GAAK,GAAKA,GAAK,GAChB,MAhEwC,MAiE5C,GAAKA,GAAK,GAAKA,GAAK,EAChB,MApEwC,MAqE5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MAzEwC,MA0E5C,GAAS,GAALA,EACA,MA5EwC,MA6E5C,GAAU,GAALA,GAAaA,EAAI,IAAO,EACzB,MA3EyC,OA4E7C,MAGJ,KAAK,MACL,KAAK,MACD,GAAS,GAALA,EACA,MArFwC,MAsF5C,GAAKA,GAAK,GAAKA,GAAK,EAChB,MArFwC,MAsF5C,MAGJ,KAAK,MACD,GAAU,GAALA,GAAaA,EAAI,KAAY,EAC9B,MA1FyC,OA2F7C,GAAMA,EAAI,IAAO,GAASA,EAAI,KAAQ,IAASA,EAAI,KAAQ,IAASA,EAAI,KAAQ,GAC5E,MA/FwC,MAgG5C,GAAMA,EAAI,IAAO,GAASA,EAAI,KAAQ,IAASA,EAAI,KAAQ,IAASA,EAAI,KAAQ,GAC5E,MAhGwC,MAiG5C,IAAOA,EAAI,IAAO,GAAMA,EAAI,IAAO,GAAQA,EAAI,IAAO,KAAUA,EAAI,IAAO,IAAOA,EAAI,IAAO,MAASA,EAAI,IAAO,IAAOA,EAAI,IAAO,MAASA,EAAI,IAAO,IAAOA,EAAI,IAAO,IACrK,MAjGwC,MAkG5C,MAGJ,KAAK,MACD,GAAKA,EAAI,KAAQ,EACb,MAxGwC,MAyG5C,GAAKA,EAAI,KAAQ,EACb,MA3GwC,MA4G5C,GAAMA,EAAI,KAAQ,GAAMA,EAAI,KAAQ,EAChC,MA3GwC,MA4G5C,MAGJ,KAAK,QACD,GAAS,GAALA,EACA,MApHyC,OAqH7C,GAAMA,GAAK,GAAKA,GAAK,GAAa,GAALA,GAAiB,GAALA,EACrC,MArHwC,MAsH5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MA3HwC,MA4H5C,GAAOA,EAAI,IAAO,GAAMA,EAAI,IAAO,IAAUA,EAAI,IAAO,IAAOA,EAAI,IAAO,IACtE,MA3HwC,MA4H5C,GAAW,GAALA,GAAcA,EAAI,IAAO,GAAMA,EAAI,IAAO,GAAWA,EAAI,IAAO,GAAMA,EAAI,IAAO,GAAUA,EAAI,KAAQ,IAAOA,EAAI,KAAQ,GAC5H,MA5HyC,OA6H7C,MAGJ,KAAK,MACD,GAAU,GAALA,GAAiB,IAALA,EACb,MApIwC,MAqI5C,GAAU,GAALA,GAAiB,IAALA,EACb,MAvIwC,MAwI5C,GAAKA,GAAK,GAAKA,GAAK,IAAQA,GAAK,IAAMA,GAAK,GACxC,MAvIwC,MAwI5C,MAGJ,KAAK,MACD,GAAOA,EAAI,IAAO,GAAMA,EAAI,IAAO,GAASA,EAAI,IAAO,EACnD,MA/IwC,MAgJ5C,MAGJ,KAAK,MACD,GAAMA,EAAI,IAAO,GAAY,IAALA,EACpB,MArJwC,MAsJ5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MA3JwC,MA4J5C,GAAMA,EAAI,KAAQ,IAAOA,EAAI,KAAQ,GACjC,MA1JyC,OA2J7C,GAAU,GAALA,GAAcA,EAAI,KAAQ,GAAMA,EAAI,KAAQ,GAC7C,MA7JwC,MA8J5C,MAGJ,KAAK,MACL,KAAK,MACD,GAAS,GAALA,EACA,MAtKwC,MAuK5C,GAAU,GAALA,GAAkB,GAALA,GAAcA,EAAI,KAAQ,GAAMA,EAAI,KAAQ,GAC1D,MAtKwC,MAuK5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MA7KwC,MA8K5C,GAAS,GAALA,EACA,MAhLwC,MAiL5C,GAAKA,GAAK,GAAKA,GAAK,EAChB,MAhLwC,MAiL5C,GAAKA,GAAK,GAAKA,GAAK,GAChB,MAjLyC,OAkL7C,MAGJ,KAAK,MACL,KAAK,MACL,KAAK,QACD,GAAMA,GAAK,GAAKA,GAAK,GAAa,GAALA,EACzB,MA5LwC,MA6L5C,MAGJ,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACL,KAAK,QACD,GAAS,GAALA,EACA,MAzMwC,MA0M5C,GAAS,GAALA,EACA,MA5MwC,MA6M5C,MAGJ,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,MACL,KAAK,QACL,KAAK,QACL,KAAK,QACD,GAAKA,GAAK,GAAKA,GAAK,EAChB,MA7NwC,MA8N5C,MAGJ,KAAK,QACD,GAAMA,GAAK,GAAKA,GAAK,GAASA,GAAK,IAAMA,GAAK,GAC1C,MAnOwC,MAowC,MA2U5C,MAGJ,KAAK,MACD,GAAS,GAALA,EACA,MA/UwC,MAgV5C,GAAS,GAALA,EACA,MAlVwC,MAmV5C,GAAS,GAALA,EACA,MArVyC,OAsV7C,GAAMA,EAAI,KAAQ,GAAMA,EAAI,KAAQ,GAChC,MApVwC,MAqV5C,GAAMA,EAAI,KAAQ,IAAOA,EAAI,KAAQ,GACjC,MArVyC,OAyVrD,MAxVsD,QAkW1D,MAAMC,EAAO,CACXC,YAAa,MAGX,YAAYC,GACVC,KAAKC,OAASP,EAAwBQ,KAAK,KAXjD,SAA0BH,GACxB,IAAIJ,EAAK,EACT,IAAI,IAAIQ,EAAI,EAAGA,EAAIJ,EAAKK,SAAUD,EAAKR,GAAMA,GAAM,GAAKI,EAAKM,WAAWF,GACxE,OAAOR,EAQ8CW,CAAiBP,OAKzD","file":"22.0a628e2d4248ba9d2bc6.chunk.js","sourcesContent":["/*\r\n * https://github.com/morethanwords/tweb\r\n * Copyright (C) 2019-2021 Eduard Kuzmenko\r\n * https://github.com/morethanwords/tweb/blob/master/LICENSE\r\n */\r\n\r\nconst NumberPluralizationFormZero: Intl.LDMLPluralRule = 'zero';\r\nconst NumberPluralizationFormOne: Intl.LDMLPluralRule = 'one';\r\nconst NumberPluralizationFormTwo: Intl.LDMLPluralRule = 'two';\r\nconst NumberPluralizationFormFew: Intl.LDMLPluralRule = 'few';\r\nconst NumberPluralizationFormMany: Intl.LDMLPluralRule = 'many';\r\nconst NumberPluralizationFormOther: Intl.LDMLPluralRule = 'other';\r\n\r\nfunction numberPluralizationForm(lc: number, n: number): Intl.LDMLPluralRule {\r\n    switch (lc) {\r\n            \r\n            // set1\r\n        case 0x6c74: // lt\r\n            if (((n % 10) == 1) && (((n % 100) < 11 || (n % 100) > 19))) // n mod 10 is 1 and n mod 100 not in 11..19\r\n                return NumberPluralizationFormOne;\r\n            if ((((n % 10) >= 2 && (n % 10) <= 9)) && (((n % 100) < 11 || (n % 100) > 19))) // n mod 10 in 2..9 and n mod 100 not in 11..19\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set2\r\n        case 0x6c76: // lv\r\n            if (n == 0) // n is 0\r\n                return NumberPluralizationFormZero;\r\n            if (((n % 10) == 1) && ((n % 100) != 11)) // n mod 10 is 1 and n mod 100 is not 11\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set3\r\n        case 0x6379: // cy\r\n            if (n == 2) // n is 2\r\n                return NumberPluralizationFormTwo;\r\n            if (n == 3) // n is 3\r\n                return NumberPluralizationFormFew;\r\n            if (n == 0) // n is 0\r\n                return NumberPluralizationFormZero;\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if (n == 6) // n is 6\r\n                return NumberPluralizationFormMany;\r\n            break;\r\n            \r\n            // set4\r\n        case 0x6265: // be\r\n        case 0x6273: // bs\r\n        case 0x6872: // hr\r\n        case 0x7275: // ru\r\n        case 0x7368: // sh\r\n        case 0x7372: // sr\r\n        case 0x756b: // uk\r\n            if (((n % 10) == 1) && ((n % 100) != 11)) // n mod 10 is 1 and n mod 100 is not 11\r\n                return NumberPluralizationFormOne;\r\n            if ((((n % 10) >= 2 && (n % 10) <= 4)) && (((n % 100) < 12 || (n % 100) > 14))) // n mod 10 in 2..4 and n mod 100 not in 12..14\r\n                return NumberPluralizationFormFew;\r\n            if (((n % 10) == 0) || (((n % 10) >= 5 && (n % 10) <= 9)) || (((n % 100) >= 11 && (n % 100) <= 14))) // n mod 10 is 0 or n mod 10 in 5..9 or n mod 100 in 11..14\r\n                return NumberPluralizationFormMany;\r\n            break;\r\n            \r\n            // set5\r\n        case 0x6b7368: // ksh\r\n            if (n == 0) // n is 0\r\n                return NumberPluralizationFormZero;\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set6\r\n        case 0x736869: // shi\r\n            if ((n >= 2 && n <= 10)) // n in 2..10\r\n                return NumberPluralizationFormFew;\r\n            if ((n >= 0 && n <= 1)) // n within 0..1\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set7\r\n        case 0x6865: // he\r\n            if (n == 2) // n is 2\r\n                return NumberPluralizationFormTwo;\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if ((n != 0) && ((n % 10) == 0)) // n is not 0 AND n mod 10 is 0\r\n                return NumberPluralizationFormMany;\r\n            break;\r\n            \r\n            // set8\r\n        case 0x6373: // cs\r\n        case 0x736b: // sk\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if ((n >= 2 && n <= 4)) // n in 2..4\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set9\r\n        case 0x6272: // br\r\n            if ((n != 0) && ((n % 1000000) == 0)) // n is not 0 and n mod 1000000 is 0\r\n                return NumberPluralizationFormMany;\r\n            if (((n % 10) == 1) && (((n % 100) != 11) && ((n % 100) != 71) && ((n % 100) != 91))) // n mod 10 is 1 and n mod 100 not in 11,71,91\r\n                return NumberPluralizationFormOne;\r\n            if (((n % 10) == 2) && (((n % 100) != 12) && ((n % 100) != 72) && ((n % 100) != 92))) // n mod 10 is 2 and n mod 100 not in 12,72,92\r\n                return NumberPluralizationFormTwo;\r\n            if ((((n % 10) >= 3 && (n % 10) <= 4) || ((n % 10) == 9)) && (((n % 100) < 10 || (n % 100) > 19) && ((n % 100) < 70 || (n % 100) > 79) && ((n % 100) < 90 || (n % 100) > 99))) // n mod 10 in 3..4,9 and n mod 100 not in 10..19,70..79,90..99\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set10\r\n        case 0x736c: // sl\r\n            if ((n % 100) == 2) // n mod 100 is 2\r\n                return NumberPluralizationFormTwo;\r\n            if ((n % 100) == 1) // n mod 100 is 1\r\n                return NumberPluralizationFormOne;\r\n            if (((n % 100) >= 3 && (n % 100) <= 4)) // n mod 100 in 3..4\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set11\r\n        case 0x6c6167: // lag\r\n            if (n == 0) // n is 0\r\n                return NumberPluralizationFormZero;\r\n            if (((n >= 0 && n <= 2)) && (n != 0) && (n != 2)) // n within 0..2 and n is not 0 and n is not 2\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set12\r\n        case 0x706c: // pl\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if ((((n % 10) >= 2 && (n % 10) <= 4)) && (((n % 100) < 12 || (n % 100) > 14))) // n mod 10 in 2..4 and n mod 100 not in 12..14\r\n                return NumberPluralizationFormFew;\r\n            if (((n != 1) && (((n % 10) >= 0 && (n % 10) <= 1))) || (((n % 10) >= 5 && (n % 10) <= 9)) || (((n % 100) >= 12 && (n % 100) <= 14))) // n is not 1 and n mod 10 in 0..1 or n mod 10 in 5..9 or n mod 100 in 12..14\r\n                return NumberPluralizationFormMany;\r\n            break;\r\n            \r\n            // set13\r\n        case 0x6764: // gd\r\n            if ((n == 2) || (n == 12)) // n in 2,12\r\n                return NumberPluralizationFormTwo;\r\n            if ((n == 1) || (n == 11)) // n in 1,11\r\n                return NumberPluralizationFormOne;\r\n            if ((n >= 3 && n <= 10) || (n >= 13 && n <= 19)) // n in 3..10,13..19\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set14\r\n        case 0x6776: // gv\r\n            if ((((n % 10) >= 1 && (n % 10) <= 2)) || ((n % 20) == 0)) // n mod 10 in 1..2 or n mod 20 is 0\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set15\r\n        case 0x6d6b: // mk\r\n            if (((n % 10) == 1) && (n != 11)) // n mod 10 is 1 and n is not 11\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set16\r\n        case 0x6d74: // mt\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if (((n % 100) >= 11 && (n % 100) <= 19)) // n mod 100 in 11..19\r\n                return NumberPluralizationFormMany;\r\n            if ((n == 0) || (((n % 100) >= 2 && (n % 100) <= 10))) // n is 0 or n mod 100 in 2..10\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set17\r\n        case 0x6d6f: // mo\r\n        case 0x726f: // ro\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if ((n == 0) || ((n != 1) && (((n % 100) >= 1 && (n % 100) <= 19)))) // n is 0 OR n is not 1 AND n mod 100 in 1..19\r\n                return NumberPluralizationFormFew;\r\n            break;\r\n            \r\n            // set18\r\n        case 0x6761: // ga\r\n            if (n == 2) // n is 2\r\n                return NumberPluralizationFormTwo;\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if ((n >= 3 && n <= 6)) // n in 3..6\r\n                return NumberPluralizationFormFew;\r\n            if ((n >= 7 && n <= 10)) // n in 7..10\r\n                return NumberPluralizationFormMany;\r\n            break;\r\n            \r\n            // set19\r\n        case 0x6666: // ff\r\n        case 0x6672: // fr\r\n        case 0x6b6162: // kab\r\n            if (((n >= 0 && n <= 2)) && (n != 2)) // n within 0..2 and n is not 2\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set20\r\n        case 0x6975: // iuw\r\n        case 0x6b77: // kw\r\n        case 0x7365: // se\r\n        case 0x6e6171: // naq\r\n        case 0x736d61: // sma\r\n        case 0x736d69: // smi\r\n        case 0x736d6a: // smj\r\n        case 0x736d6e: // smn\r\n        case 0x736d73: // sms\r\n            if (n == 2) // n is 2\r\n                return NumberPluralizationFormTwo;\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set21\r\n        case 0x616b: // ak\r\n        case 0x616d: // am\r\n        case 0x6268: // bh\r\n        case 0x6869: // hi\r\n        case 0x6c6e: // ln\r\n        case 0x6d67: // mg\r\n        case 0x7469: // ti\r\n        case 0x746c: // tl\r\n        case 0x7761: // wa\r\n        case 0x66696c: // fil\r\n        case 0x677577: // guw\r\n        case 0x6e736f: // nso\r\n            if ((n >= 0 && n <= 1)) // n in 0..1\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set22\r\n        case 0x747a6d: // tzm\r\n            if (((n >= 0 && n <= 1)) || ((n >= 11 && n <= 99))) // n in 0..1 or n in 11..99\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set23\r\n        case 0x6166: // af\r\n        case 0x6267: // bg\r\n        case 0x626e: // bn\r\n        case 0x6361: // ca\r\n        case 0x6461: // da\r\n        case 0x6465: // de\r\n        case 0x6476: // dv\r\n        case 0x6565: // ee\r\n        case 0x656c: // el\r\n        case 0x656e: // en\r\n        case 0x656f: // eo\r\n        case 0x6573: // es\r\n        case 0x6574: // et\r\n        case 0x6575: // eu\r\n        case 0x6669: // fi\r\n        case 0x666f: // fo\r\n        case 0x6679: // fy\r\n        case 0x676c: // gl\r\n        case 0x6775: // gu\r\n        case 0x6861: // ha\r\n        case 0x6973: // is\r\n        case 0x6974: // it\r\n        case 0x6b6b: // kk\r\n        case 0x6b6c: // kl\r\n        case 0x6b73: // ks\r\n        case 0x6b75: // ku\r\n        case 0x6b79: // ky\r\n        case 0x6c62: // lb\r\n        case 0x6c67: // lg\r\n        case 0x6d6c: // ml\r\n        case 0x6d6e: // mn\r\n        case 0x6d72: // mr\r\n        case 0x6e62: // nb\r\n        case 0x6e64: // nd\r\n        case 0x6e65: // ne\r\n        case 0x6e6c: // nl\r\n        case 0x6e6e: // nn\r\n        case 0x6e6f: // no\r\n        case 0x6e72: // nr\r\n        case 0x6e79: // ny\r\n        case 0x6f6d: // om\r\n        case 0x6f72: // or\r\n        case 0x6f73: // os\r\n        case 0x7061: // pa\r\n        case 0x7073: // ps\r\n        case 0x7074: // pt\r\n        case 0x726d: // rm\r\n        case 0x736e: // sn\r\n        case 0x736f: // so\r\n        case 0x7371: // sq\r\n        case 0x7373: // ss\r\n        case 0x7374: // st\r\n        case 0x7376: // sv\r\n        case 0x7377: // sw\r\n        case 0x7461: // ta\r\n        case 0x7465: // te\r\n        case 0x746b: // tk\r\n        case 0x746e: // tn\r\n        case 0x7473: // ts\r\n        case 0x7572: // ur\r\n        case 0x7665: // ve\r\n        case 0x766f: // vo\r\n        case 0x7868: // xh\r\n        case 0x7a75: // zu\r\n        case 0x617361: // asa\r\n        case 0x617374: // ast\r\n        case 0x62656d: // bem\r\n        case 0x62657a: // bez\r\n        case 0x627278: // brx\r\n        case 0x636767: // cgg\r\n        case 0x636872: // chr\r\n        case 0x636b62: // ckb\r\n        case 0x667572: // fur\r\n        case 0x677377: // gsw\r\n        case 0x686177: // haw\r\n        case 0x6a676f: // jgo\r\n        case 0x6a6d63: // jmc\r\n        case 0x6b616a: // kaj\r\n        case 0x6b6367: // kcg\r\n        case 0x6b6b6a: // kkj\r\n        case 0x6b7362: // ksb\r\n        case 0x6d6173: // mas\r\n        case 0x6d676f: // mgo\r\n        case 0x6e6168: // nah\r\n        case 0x6e6e68: // nnh\r\n        case 0x6e796e: // nyn\r\n        case 0x706170: // pap\r\n        case 0x726f66: // rof\r\n        case 0x72776b: // rwk\r\n        case 0x736171: // saq\r\n        case 0x736568: // seh\r\n        case 0x737379: // ssy\r\n        case 0x737972: // syr\r\n        case 0x74656f: // teo\r\n        case 0x746967: // tig\r\n        case 0x76756e: // vun\r\n        case 0x776165: // wae\r\n        case 0x786f67: // xog\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            break;\r\n            \r\n            // set24\r\n        case 0x6172: // ar\r\n            if (n == 2) // n is 2\r\n                return NumberPluralizationFormTwo;\r\n            if (n == 1) // n is 1\r\n                return NumberPluralizationFormOne;\r\n            if (n == 0) // n is 0\r\n                return NumberPluralizationFormZero;\r\n            if (((n % 100) >= 3 && (n % 100) <= 10)) // n mod 100 in 3..10\r\n                return NumberPluralizationFormFew;\r\n            if (((n % 100) >= 11 && (n % 100) <= 99)) // n mod 100 in 11..99\r\n                return NumberPluralizationFormMany;\r\n            break;\r\n    }\r\n    \r\n    return NumberPluralizationFormOther;\r\n}\r\n\r\n\r\nfunction languageCodehash(code: string) {\r\n  let lc = 0;\r\n  for(let i = 0; i < code.length; ++i) { lc = (lc << 8) + code.charCodeAt(i); }\r\n  return lc;\r\n}\r\n\r\nconst Intl = {\r\n  PluralRules: class {\r\n    public select: (n: number) => Intl.LDMLPluralRule;\r\n\r\n    constructor(code: string) {\r\n      this.select = numberPluralizationForm.bind(null, languageCodehash(code));\r\n    }\r\n  }\r\n};\r\n\r\nexport default Intl;\r\n"],"sourceRoot":""}